---
import { Image } from 'astro:assets'

import type { PostModel } from '@interfaces/post-model'
import { getFormatDate } from '@utils/date-helper'

interface Props {
  post: PostModel
  from?: string
}

const { post, from } = Astro.props
const { Content } = await post.render()
---

<article>
  <h2 data-pagefind-ignore class:list={['mt-2', { 'text-center': from && from === 'post' }]}>{post.data.title}</h2>

  <>
    <div data-pagefind-ignore class="my-2 text-right text-xs text-gray-400">
      {
        post.data.tags?.map((tag: string) => (
          <a class="mx-1 inline-block text-xs no-underline" href={'/tags/' + tag}>
            #{tag}
          </a>
        ))
      }
      {getFormatDate(post.data.date)}
    </div>
    {
      post.data.cover && (
        <Image src={post.data.cover} loading="eager" data-pagefind-meta="image[src]" class="mb-4" alt="" />
      )
    }
  </>

  <Content />
</article>

<style lang="less" is:global>
  nav {
    padding: 0 0.75rem;
  }

  article {
    pre {
      border-radius: 0.3rem;

      &::-webkit-scrollbar {
        display: none;
      }
    }

    code:not(:has(span)) {
      padding: 0 0.4rem;
      margin: 0 0.2rem;
      border-radius: 0.3rem;
      display: inline-flex;
      white-space: nowrap;
      overflow-x: scroll;
      max-width: 100%;
      scrollbar-width: none;
      color: white;
      background-color: #374151;
      &::-webkit-scrollbar {
        display: none;
      }
    }

    h1,
    h2,
    h3,
    h4,
    h5,
    h6 {
      margin: 0.75rem 0;
      font-weight: bold;
      &:target {
        padding-top: 6.25rem;
        margin-top: -5.5rem;
        @media screen and (min-width: 1500px) {
          padding-top: 7.5rem;
          margin-top: -6.75rem;
        }
      }
    }

    h1 {
      font-size: @h1-size;
    }

    h2 {
      font-size: @h2-size;
    }

    h3 {
      font-size: @h3-size;
      color: @h3-color;
    }

    h4 {
      font-size: @h4-size;
      color: @h4-color;
    }

    h5 {
      font-size: @h5-size;
      color: @h5-color;
    }

    h6 {
      font-size: @h6-size;
      color: @h6-color;
    }

    p {
      margin: 0.5rem 0;
      a {
        margin: 0 0.1875rem;
      }
    }

    ul {
      list-style: disc;
      padding-left: 1.4rem;
      margin: 0.5rem 0;
    }

    ol {
      list-style: decimal;
      padding-left: 1.6rem;
      margin: 0.5rem 0;
    }

    li {
      margin: 0.5rem 0;
      & > ul {
        padding-left: 1.25rem;
      }

      & > p:first-child {
        display: inline;
      }
      pre {
        margin-top: 0.5rem;
      }
    }

    a {
      text-decoration: underline;
      text-underline-offset: 4px;
    }

    hr {
      border-top: 3px dotted #282c34;
      margin: 1rem auto;
      width: 30%;
    }

    input {
      vertical-align: middle;
    }

    img {
      width: 100%;
      border-radius: 5px;
    }

    details {
      summary {
        cursor: pointer;
        margin: 0.625rem 0;
      }
      .toc {
        width: 100%;
        padding: 0.5rem 0 0.5rem 2rem;
        background-color: #dddddd;
        border-radius: 5px;
        @media screen and (max-width: 768px) {
          padding: 0.1rem 0 0.1rem 2rem;
        }
      }
      ol {
        list-style: circle;
      }
      li {
        margin: 0.5rem 0;
      }
    }

    blockquote {
      border-left: 0.3rem solid;
      border-radius: 0.3rem;
      border-left-color: #1f1f1f;
      background-color: #dddddd;
      margin: 0.625rem 0 !important;
      padding: 0.625rem 0.625rem 0.625rem 0.625rem;
      p {
        margin: 0.3125rem 0;
      }
    }
  }

  pre.astro-code {
    padding: 0.5rem 0;
    font-family: @post-font;
    code {
      font-family: @post-font;
    }
    font-size: 0.96rem;
  }

  code {
    .highlighted {
      background-color: #65758529;
      display: inline-block;
      width: 100%;
    }

    .diff.add {
      background-color: #10b98129;
      display: inline-block;
      width: 100%;
    }

    .diff.remove {
      background-color: #f43f5e29;
      display: inline-block;
      width: 100%;
    }

    counter-reset: step;
    counter-increment: step 0;

    .line::before {
      content: counter(step);
      counter-increment: step;
      width: 1.6rem;
      margin-right: 1rem;
      display: inline-block;
      text-align: right;
      color: rgba(115, 138, 148, 0.4);
    }

    span.line:last-child:empty {
      display: none;
    }
  }

  .dark {
    code:not(:has(span)) {
      background-color: #282c34;
    }

    blockquote {
      border-left-color: #fcfcfc;
      background-color: #2a2a2a;
    }
    .toc {
      background-color: #2a2a2a;
    }
  }
</style>
