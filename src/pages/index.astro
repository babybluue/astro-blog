---
import { Image } from 'astro:assets'

import avatarImg from '@assets/avatar.jpg'
import ContentRender from '@components/content-render.astro'
import ThemeButton from '@components/theme-button.astro'
import BaseLayout from '@layouts/base-layout.astro'
import { getAllPosts } from '@utils/all-posts'
import { formatedYMD, getFormatDate } from '@utils/date-helper'

const links = [
  { url: '/notes', title: '笔记' },
  { url: '/tags', title: '标签' },
  { url: '/archive', title: '归档' },
]

const latestPost = (await getAllPosts()).slice(0, 3)
---

<BaseLayout title="babyblue" description="my blog">
  <main>
    <section class="flex flex-col items-center justify-center">
      <Image
        src={avatarImg}
        alt=""
        class="avatar mt-10 aspect-square w-[100px] cursor-pointer select-none rounded-full transition-all"
      />
      <span class="my-5">Yellow</span>
      <span class="px-10 text-center">
        我个人的一个秘密是在需要极大快乐和悲伤的公众场合却达不到这种快乐和悲伤应有的水平，因而内心惊恐万状，汗下如雨
      </span>
    </section>
    <section class="my-10 flex items-center justify-center gap-10">
      {
        links.map((item) => (
          <a href={item.url} class="text-primary">
            {item.title}
          </a>
        ))
      }
      <ThemeButton class="absolute right-0" />
    </section>
    <section class="m-auto w-[70%] pt-5">
      {
        latestPost.map((post) => (
          <div class="py-2">
            <h1>
              <a href={`/posts/${post.data.abbrlink}`}>{post.data.title}</a>
            </h1>
            <div class="text-sm text-gray-400">{post.data.descriptions}</div>
            <div class="py-2 text-xs">
              <span class="text-gray-400">{getFormatDate(post.data.date)}</span>
              {post.data.tags?.map((tag: string) => (
                <a class="mx-2" href={'/tags/' + tag}>
                  {tag}
                </a>
              ))}
            </div>
          </div>
        ))
      }
    </section>
  </main>
  <script>
    document.addEventListener('astro:page-load', () => {
      const avatar = document.querySelector('.avatar')
      avatar?.addEventListener('mouseenter', () => {
        avatar.classList.add('rotate-[360deg]')
      })
      avatar?.addEventListener('mouseleave', () => {
        avatar.classList.remove('rotate-[360deg]')
      })
      avatar?.addEventListener('touchstart', () => {
        avatar.classList.add('rotate-[360deg]')
      })
      avatar?.addEventListener('touchend', () => {
        avatar.classList.remove('rotate-[360deg]')
      })
    })
  </script>
</BaseLayout>
