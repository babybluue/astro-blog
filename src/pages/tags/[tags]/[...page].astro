---
import type { Page, PaginateFunction } from 'astro'

import BaseHead from '@components/base-head.astro'
import NavHead from '@components/nav-head.astro'
import Pagination from '@components/pagination.astro'
import PostList from '@components/post-list.astro'
import BaseLayout from '@layouts/base-layout.astro'
import { getAllPosts } from '@utils/all-posts'

interface Props {
  page: Page
}

export const getStaticPaths = async ({ paginate }: { paginate: PaginateFunction }) => {
  const allPosts = await getAllPosts()

  const uniqueTags = [
    ...new Set(
      allPosts
        .map((post) => post.data.tags)
        .flat()
        .filter((tag): tag is string => Boolean(tag)),
    ),
  ]

  return uniqueTags.flatMap((tag) => {
    const filteredPosts = allPosts.filter((post) => post.data.tags && post.data.tags.includes(tag))
    return paginate(filteredPosts, { params: { tags: tag }, pageSize: 8 })
  })
}

const { tags } = Astro.params
const { page } = Astro.props
---

<BaseLayout>
  <BaseHead title={tags ?? 'tag'} description="blog tag" />
  <NavHead />
  <main>
    <section class="py-5 text-2xl font-bold">{tags}</section>
    <section>
      <PostList posts={page.data} />
    </section>
    <section class="mt-5 flex items-center gap-4 px-5">
      <Pagination page={page} />
    </section>
  </main>
</BaseLayout>
